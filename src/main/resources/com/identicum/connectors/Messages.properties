# Nombre del conector que se muestra en la GUI de Midpoint
connector.identicum.rest.display=Conector Koha para Usuarios (API REST)

# Propiedades de configuración heredadas de AbstractRestConfiguration
serviceAddress.display=Dirección del Servicio Koha (URL Base)
serviceAddress.help=Indicar la URL base de la API de Koha, por ejemplo http://tu-koha.com (sin /api/v1, eso se añade internamente o se configura en los sufijos).

# Nuevas propiedades para OAuth2 Client Credentials (específicas de Koha)
config.koha.clientId.display=OAuth2 Client ID (Koha)
config.koha.clientId.help=El Client ID para la autenticación OAuth2 (flujo Client Credentials) con la API de Koha.

config.koha.clientSecret.display=OAuth2 Client Secret (Koha)
config.koha.clientSecret.help=El Client Secret para la autenticación OAuth2 (flujo Client Credentials) con la API de Koha.

config.koha.tokenUrlSuffix.display=Sufijo URL Token OAuth2 (Koha)
config.koha.tokenUrlSuffix.help=El sufijo para la URL de obtención del token OAuth2 (ej. /api/v1/oauth/token). Se concatena a la Dirección del Servicio. Valor por defecto: /api/v1/oauth/token

# Puedes mantener o refinar otras propiedades heredadas si es necesario,
# por ejemplo, para username/password si aún soportas Basic Auth como fallback.
# Estas son de AbstractRestConfiguration:
# username.display=Usuario (Para Autenticación Básica)
# username.help=Nombre de usuario para la autenticación básica con la API. Dejar vacío si se usa OAuth2.
# password.display=Contraseña (Para Autenticación Básica)
# password.help=Contraseña para la autenticación básica con la API. Dejar vacío si se usa OAuth2.
# authMethod.display=Método de Autenticación
# authMethod.help=Define el método de autenticación (ej. BASIC, OAUTH2_KOHA_CC).